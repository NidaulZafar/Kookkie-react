{"ast":null,"code":"var _jsxFileName = \"/Users/hackyourfuture/Desktop/hyf-course/repos/settly-technical-assignment/client/src/components/RegistrationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    firstName: \"\",\n    surname: \"\",\n    email: \"\",\n    confirmEmail: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [captcha, setCaptcha] = useState(null);\n  const handleCaptchaChange = value => {\n    setCaptcha(value);\n  };\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      firstName,\n      surname,\n      email,\n      confirmEmail,\n      password,\n      confirmPassword\n    } = userData;\n\n    // Validate user data\n    if (!firstName || !surname || !email || !password) {\n      setErrorMessage(\"Please fill in all required fields\");\n      return;\n    }\n    if (email !== confirmEmail) {\n      setErrorMessage(\"Email addresses do not match\");\n      return;\n    }\n    if (password.length < 3) {\n      setErrorMessage(\"Password must be at least 3 characters long\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords should match\");\n      return;\n    }\n    if (!captcha) {\n      setErrorMessage(\"Please complete the ReCAPTCHA verification\");\n      return;\n    }\n\n    // Send user data to backend\n    const response = await fetch(\"http://localhost:5000/api/user/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstName,\n        surname,\n        email,\n        password,\n        captcha\n      })\n    });\n    const data = await response.json();\n    console.log(data.message); // User registration successful\n    navigate(\"/login\");\n  };\n  const {\n    firstName,\n    surname,\n    email,\n    confirmEmail,\n    password,\n    confirmPassword\n  } = userData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading\",\n      children: \"Create your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          placeholder: \"First name\",\n          value: firstName,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"surname\",\n          name: \"surname\",\n          placeholder: \"Surname\",\n          value: surname,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email address\",\n          value: email,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"confirmEmail\",\n          name: \"confirmEmail\",\n          placeholder: \"Confirm Email address\",\n          value: confirmEmail,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          placeholder: \"Repeat your password\",\n          value: confirmPassword,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: \"6Lf-PvYkAAAAAA2VqxiuSIvrA-romzdDmUwEojpG\",\n        onChange: handleCaptchaChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"CREATE ACCOUNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"lG8OjVh6d/PvA/C+36DSvQKltbo=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useNavigate","ReCAPTCHA","jsxDEV","_jsxDEV","RegistrationForm","_s","userData","setUserData","firstName","surname","email","confirmEmail","password","confirmPassword","captcha","setCaptcha","handleCaptchaChange","value","errorMessage","setErrorMessage","handleInputChange","event","name","target","prevState","navigate","handleSubmit","preventDefault","length","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","placeholder","onChange","required","sitekey","_c","$RefreshReg$"],"sources":["/Users/hackyourfuture/Desktop/hyf-course/repos/settly-technical-assignment/client/src/components/RegistrationForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst RegistrationForm = () => {\n  const [userData, setUserData] = useState({\n    firstName: \"\",\n    surname: \"\",\n    email: \"\",\n    confirmEmail: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const [captcha, setCaptcha] = useState(null);\n  const handleCaptchaChange = (value) => {\n    setCaptcha(value);\n  };\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserData((prevState) => ({ ...prevState, [name]: value }));\n  };\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const {\n      firstName,\n      surname,\n      email,\n      confirmEmail,\n      password,\n      confirmPassword,\n    } = userData;\n\n    // Validate user data\n    if (!firstName || !surname || !email || !password) {\n      setErrorMessage(\"Please fill in all required fields\");\n      return;\n    }\n\n    if (email !== confirmEmail) {\n      setErrorMessage(\"Email addresses do not match\");\n      return;\n    }\n\n    if (password.length < 3) {\n      setErrorMessage(\"Password must be at least 3 characters long\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords should match\");\n      return;\n    }\n    if (!captcha) {\n      setErrorMessage(\"Please complete the ReCAPTCHA verification\");\n      return;\n    }\n\n    // Send user data to backend\n    const response = await fetch(\"http://localhost:5000/api/user/create\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ firstName, surname, email, password, captcha }),\n    });\n    const data = await response.json();\n    console.log(data.message); // User registration successful\n    navigate(\"/login\");\n  };\n\n  const { firstName, surname, email, confirmEmail, password, confirmPassword } =\n    userData;\n\n  return (\n    <div className=\"container\">\n      <p className=\"heading\">Create your account</p>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            name=\"firstName\"\n            placeholder=\"First name\"\n            value={firstName}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            id=\"surname\"\n            name=\"surname\"\n            placeholder=\"Surname\"\n            value={surname}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            id=\"confirmEmail\"\n            name=\"confirmEmail\"\n            placeholder=\"Confirm Email address\"\n            value={confirmEmail}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            placeholder=\"Repeat your password\"\n            value={confirmPassword}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <ReCAPTCHA\n          sitekey=\"6Lf-PvYkAAAAAA2VqxiuSIvrA-romzdDmUwEojpG\"\n          onChange={handleCaptchaChange}\n        />\n        <button type=\"submit\">CREATE ACCOUNT</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}